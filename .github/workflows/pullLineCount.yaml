on:
  issues:
    types:
      - closed

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  welcome:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue.html_url
            let base_url = ''
            console.log('Github event: issue_closed for issue =', issue)
            if (true) {
              for (const label of context.payload.issue.labels) {
                if (label.name.includes('type:bug') ||
                  label.name.includes('type:build/install') ||
                  label.name.includes('type:support') ||
                  label.name.includes('type:others') ||
                  label.name.includes('type:docs-bug') ||
                  label.name.includes('type:performance')) {
                  console.log(`label-${label.name}, posting CSAT survey for issue =${issue}`)
                  if (context.payload.repository.name.includes('mediapipe'))
                    base_url = constants.mediapipe_csat_base_url
                  else
                    base_url = constants.base_url
                  const yesCsat =
                    (constants.yes)
                      .link(
                      base_url + constants.satisfaction_param +
                      constants.yes + constants.issueid_param + issue)
                  const noCsat =
                    (constants.no)
                      .link(
                        base_url + constants.satisfaction_param +
                        constants.no + constants.issueid_param + issue)
                  const issueComment = context.issue({
                    body: constants.msg + '\n' + yesCsat + '\n' + noCsat + '\n'
                  });
                  console.log("issue is resolved",issueComment)
                  return context.octokit.issues.createComment(issueComment)
                }
              }
               console.log("my issue")
            }
